from enum import StrEnum
from typing import Any


class AwsService(StrEnum):
    """The AWS services that can assume a role."""

    A4B = "a4b.amazonaws.com"
    ACCESS_ANALYZER = "access-analyzer.amazonaws.com"
    ACCOUNT = "account.amazonaws.com"
    ACM_PCA = "acm-pca.amazonaws.com"
    ACM = "acm.amazonaws.com"
    AIRFLOW_ENV = "airflow-env.amazonaws.com"
    AIRFLOW = "airflow.amazonaws.com"
    ALEXA_APPKIT = "alexa-appkit.amazon.com"
    ALEXA_CONNECTEDHOME = "alexa-connectedhome.amazon.com"
    AMAZONMQ = "amazonmq.amazonaws.com"
    AMPLIFY = "amplify.amazonaws.com"
    APIGATEWAY = "apigateway.amazonaws.com"
    APPFLOW = "appflow.amazonaws.com"
    APPLICATION_AUTOSCALING = "application-autoscaling.amazonaws.com"
    APPLICATION_INSIGHTS = "application-insights.amazonaws.com"
    APPSTREAM = "appstream.amazonaws.com"
    APPSTREAM_APPLICATIOIN_AUTOSCALING = (
        "appstream.application-autoscaling.amazonaws.com"
    )
    APPSYNC = "appsync.amazonaws.com"
    ATHENA = "athena.amazonaws.com"
    AUTOMATION = "automation.amazonaws.com"
    AUTOSCALING = "autoscaling.amazonaws.com"
    AWS_ARTIFACT_ACCOUNT_SYNC = "aws-artifact-account-sync.amazonaws.com"
    BACKUP = "backup.amazonaws.com"
    BATCH = "batch.amazonaws.com"
    BILLINGCONSOLE = "billingconsole.amazonaws.com"
    BRAKET = "braket.amazonaws.com"
    BUDGETS = "budgets.amazonaws.com"
    CE = "ce.amazonaws.com"
    CHANNELS = "channels.lex.amazonaws.com"
    CHATBOT = "chatbot.amazonaws.com"
    CHIME = "chime.amazonaws.com"
    CLOUD9 = "cloud9.amazonaws.com"
    CLOUDDIRECTORY = "clouddirectory.amazonaws.com"
    CLOUDFORMATION = "cloudformation.amazonaws.com"
    CLOUDFRONT = "cloudfront.amazonaws.com"
    CLOUDHSM = "cloudhsm.amazonaws.com"
    CLOUDSEARCH = "cloudsearch.amazonaws.com"
    CLOUDTRAIL = "cloudtrail.amazonaws.com"
    CLOUDWATCH_CROSSACCOUNT = "cloudwatch-crossaccount.amazonaws.com"
    CODEBUILD = "codebuild.amazonaws.com"
    CODECOMMIT = "codecommit.amazonaws.com"
    CODEDEPLOY = "codedeploy.amazonaws.com"
    CODEGURU_REVIEWER = "codeguru-reviewer.amazonaws.com"
    CODEPIPELINE = "codepipeline.amazonaws.com"
    CODESTAR_NOTIFICATIONS = "codestar-notifications.amazonaws.com"
    CODESTAR = "codestar.amazonaws.com"
    COGNITO_IDENTITY = "cognito-identity.amazonaws.com"
    COGNITO_IDP = "cognito-idp.amazonaws.com"
    COGNITO_SYNC = "cognito-sync.amazonaws.com"
    COMPREHEND = "comprehend.amazonaws.com"
    CONFIG_CONFORMS = "config-conforms.amazonaws.com"
    CONFIG_MULTIACCOUNTSETUP = "config-multiaccountsetup.amazonaws.com"
    CONFIG = "config.amazonaws.com"
    CONNECT = "connect.amazonaws.com"
    CONTINUOUSEXPORT = "continuousexport.discovery.amazonaws.com"
    COSTALERTS = "costalerts.amazonaws.com"
    CUSTOM_RESOURCE = "custom-resource.application-autoscaling.amazonaws.com"
    DATABREW = "databrew.amazonaws.com"
    DATAPIPELINE = "datapipeline.amazonaws.com"
    DATASYNC = "datasync.amazonaws.com"
    DAX = "dax.amazonaws.com"
    DEEPLENS = "deeplens.amazonaws.com"
    DELIVERY = "delivery.logs.amazonaws.com"
    DIODE = "diode.amazonaws.com"
    DIRECTCONNECT = "directconnect.amazonaws.com"
    DISCOVERY = "discovery.amazonaws.com"
    DLM = "dlm.amazonaws.com"
    DMS = "dms.amazonaws.com"
    DS = "ds.amazonaws.com"
    DYNAMODB = "dynamodb.amazonaws.com"
    DYNAMODB_AUTOSCALING = "dynamodb.application-autoscaling.amazonaws.com"
    EC = "ec.amazonaws.com"
    EC2 = "ec2.amazonaws.com"
    EC2_AUTOSCALING = "ec2.application-autoscaling.amazonaws.com"
    EC2FLEET = "ec2fleet.amazonaws.com"
    EC2SCHEDULED = "ec2scheduled.amazonaws.com"
    ECR = "ecr.amazonaws.com"
    ECS_TASKS = "ecs-tasks.amazonaws.com"
    ECS = "ecs.amazonaws.com"
    ECS_AUTOSCALING = "ecs.application-autoscaling.amazonaws.com"
    EDGELAMBDA = "edgelambda.amazonaws.com"
    EKS_FARGATE_PODS = "eks-fargate-pods.amazonaws.com"
    EKS_FARGATE = "eks-fargate.amazonaws.com"
    EKS_NODEGROUP = "eks-nodegroup.amazonaws.com"
    EKS = "eks.amazonaws.com"
    ELASTICACHE = "elasticache.amazonaws.com"
    ELASTICBEANSTALK = "elasticbeanstalk.amazonaws.com"
    ELASTICFILESYSTEM = "elasticfilesystem.amazonaws.com"
    ELASTICLOADBALANCING = "elasticloadbalancing.amazonaws.com"
    ELASTICMAPREDUCE = "elasticmapreduce.amazonaws.com"
    ELASTICTRANSCODER = "elastictranscoder.amazonaws.com"
    EMAIL = "email.cognito-idp.amazonaws.com"
    EMR_CONTAINERS = "emr-containers.amazonaws.com"
    ES = "es.amazonaws.com"
    EVENTS = "events.amazonaws.com"
    FIREHOSE = "firehose.amazonaws.com"
    FMS = "fms.amazonaws.com"
    FORECAST = "forecast.amazonaws.com"
    FREERTOS = "freertos.amazonaws.com"
    FSX = "fsx.amazonaws.com"
    GALAXY = "galaxy.amazonaws.com"
    GAMELIFT = "gamelift.amazonaws.com"
    GLACIER = "glacier.amazonaws.com"
    GLOBALACCELERATOR = "globalaccelerator.amazonaws.com"
    GLUE = "glue.amazonaws.com"
    GREENGRASS = "greengrass.amazonaws.com"
    GUARDDUTY = "guardduty.amazonaws.com"
    HEALTH = "health.amazonaws.com"
    HONEYCODE = "honeycode.amazonaws.com"
    IAM = "iam.amazonaws.com"
    IMAGEBUILDER = "imagebuilder.amazonaws.com"
    IMPORTEXPORT = "importexport.amazonaws.com"
    INSPECTOR = "inspector.amazonaws.com"
    IOT = "iot.amazonaws.com"
    IOTANALYTICS = "iotanalytics.amazonaws.com"
    IOTEVENTS = "iotevents.amazonaws.com"
    IOTSITEWISE = "iotsitewise.amazonaws.com"
    IOTTHINGSGRAPH = "iotthingsgraph.amazonaws.com"
    IVS = "ivs.amazonaws.com"
    JELLYFISH = "jellyfish.amazonaws.com"
    KAFKA = "kafka.amazonaws.com"
    KINESIS = "kinesis.amazonaws.com"
    KINESISANALYTICS = "kinesisanalytics.amazonaws.com"
    KMS = "kms.amazonaws.com"
    LAKEFORMATION = "lakeformation.amazonaws.com"
    LAMBDA = "lambda.amazonaws.com"
    LEX = "lex.amazonaws.com"
    LICENSE_MANAGER = "license-manager.amazonaws.com"
    LIGHTSAIL = "lightsail.amazonaws.com"
    LOGGER = "logger.cloudfront.amazonaws.com"
    LOGS = "logs.amazonaws.com"
    MACHINELEARNING = "machinelearning.amazonaws.com"
    MACIE = "macie.amazonaws.com"
    MANAGEDBLOCKCHAIN = "managedblockchain.amazonaws.com"
    MANAGEDSERVICES = "managedservices.amazonaws.com"
    MEDIACONNECT = "mediaconnect.amazonaws.com"
    MEDIACONVERT = "mediaconvert.amazonaws.com"
    MEDIAPACKAGE = "mediapackage.amazonaws.com"
    MEDIASTORE = "mediastore.amazonaws.com"
    MEDIATAILOR = "mediatailor.amazonaws.com"
    MEETINGS = "meetings.chime.amazonaws.com"
    MEMBER = "member.org.stacksets.cloudformation.amazonaws.com"
    METERING_MARKETPLACE = "metering-marketplace.amazonaws.com"
    MGN = "mgn.amazonaws.com"
    MIGRATIONHUB = "migrationhub.amazonaws.com"
    MOBILEANALYTICS = "mobileanalytics.amazonaws.com"
    MOBILEHUB = "mobilehub.amazonaws.com"
    MONITORING = "monitoring.amazonaws.com"
    MQ = "mq.amazonaws.com"
    NETWORK_FIREWALL = "network-firewall.amazonaws.com"
    OPS = "ops.apigateway.amazonaws.com"
    OPSWORKS_CM = "opsworks-cm.amazonaws.com"
    OPSWORKS = "opsworks.amazonaws.com"
    ORGANIZATIONS = "organizations.amazonaws.com"
    PERSONALIZE = "personalize.amazonaws.com"
    PINPOINT = "pinpoint.amazonaws.com"
    POLLY = "polly.amazonaws.com"
    PURCHASEORDERS = "purchaseorders.amazonaws.com"
    QLDB = "qldb.amazonaws.com"
    QUICKSIGHT = "quicksight.amazonaws.com"
    RAM = "ram.amazonaws.com"
    RDS_PREVIEW = "rds-preview.amazonaws.com"
    RDS = "rds.amazonaws.com"
    REDSHIFT = "redshift.amazonaws.com"
    REKOGNITION = "rekognition.amazonaws.com"
    REPLICATION = "replication.dynamodb.amazonaws.com"
    REPLICATOR = "replicator.lambda.amazonaws.com"
    RESOURCE_GROUPS = "resource-groups.amazonaws.com"
    ROBOMAKER = "robomaker.amazonaws.com"
    ROUTE53 = "route53.amazonaws.com"
    ROUTE53DOMAINS = "route53domains.amazonaws.com"
    ROUTE53RESOLVER = "route53resolver.amazonaws.com"
    S3 = "s3.amazonaws.com"
    SAGEMAKER = "sagemaker.amazonaws.com"
    SECRETSMANAGER = "secretsmanager.amazonaws.com"
    SECURITYHUB = "securityhub.amazonaws.com"
    SERVERLESSREPO = "serverlessrepo.amazonaws.com"
    SERVICECATALOG_APPREGISTRY = "servicecatalog-appregistry.amazonaws.com"
    SERVICECATALOG = "servicecatalog.amazonaws.com"
    SERVICEDISCOVERY = "servicediscovery.amazonaws.com"
    SES = "ses.amazonaws.com"
    SHIELD = "shield.amazonaws.com"
    SIGNER = "signer.amazonaws.com"
    SIGNIN = "signin.amazonaws.com"
    SMS = "sms.amazonaws.com"
    SNS = "sns.amazonaws.com"
    SPOTFLEET = "spotfleet.amazonaws.com"
    SQS = "sqs.amazonaws.com"
    SSM_INCIDENTS = "ssm-incidents.amazonaws.com"
    SSM = "ssm.amazonaws.com"
    SSO = "sso.amazonaws.com"
    STATES = "states.amazonaws.com"
    STORAGEGATEWAY = "storagegateway.amazonaws.com"
    STREAMS = "streams.metrics.cloudwatch.amazonaws.com"
    STS = "sts.amazonaws.com"
    SUPPORT = "support.amazonaws.com"
    SWF = "swf.amazonaws.com"
    TAGGING = "tagging.amazonaws.com"
    TAGPOLICIES = "tagpolicies.tag.amazonaws.com"
    TEXTRACT = "textract.amazonaws.com"
    TIMESTREAM = "timestream.amazonaws.com"
    TRANSCRIBE = "transcribe.amazonaws.com"
    TRANSFER = "transfer.amazonaws.com"
    TRANSITGATEWAY = "transitgateway.amazonaws.com"
    TRANSLATE = "translate.amazonaws.com"
    TRUSTEDADVISOR = "trustedadvisor.amazonaws.com"
    TTS = "tts.amazonaws.com"
    VMIE = "vmie.amazonaws.com"
    VPC_FLOW_LOGS = "vpc-flow-logs.amazonaws.com"
    WAF_REGIONAL = "waf-regional.amazonaws.com"
    WAF = "waf.amazonaws.com"
    WAM = "wam.amazonaws.com"
    WORKDOCS = "workdocs.amazonaws.com"
    WORKLINK = "worklink.amazonaws.com"
    WORKMAIL = "workmail.amazonaws.com"
    WORKSPACES = "workspaces.amazonaws.com"
    XRAY = "xray.amazonaws.com"

    def get_assume_policy(self) -> dict[str, Any]:
        """Return the assume role policy for the requested service.

        Parameters
        ----------
        service : str
            the service url that can assume the role.

        Returns
        -------
        dict[str, Any]
            the assume role policy.
        """

        return {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": self,
                    },
                    "Action": "sts:AssumeRole",
                },
            ],
        }
